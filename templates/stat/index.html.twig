{% extends 'base.html.twig' %}

{% block title %}Statistiques{% endblock %}

{% block body %}
    <div>
        <canvas id="genreData" width="400" height="100"></canvas>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" integrity="sha512-s+xg36jbIujB2S2VKfpGmlC3T5V2TF3lY48DX7u2r9XzGzgPsa6wTpOQA7J9iffvdeBN0q9tKzRxVxw1JviZPg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0"></script>



    <script>
        {# fonction verifiant que le genre existe et est chargé #}
        document.addEventListener("DOMContentLoaded", function() {
            const genre = document.getElementById('genreData');

            if (genre) {
                let graph = new Chart(genre, {
                    type: 'scatter',
                    data: {
                        datasets: [{
                            label: 'Nombre d\'anime et nombre de vue par genre' ,
                            data: {{ data|raw }},
                            borderWidth: 1,
                            backgroundColor: 'rgba(255, 99, 132, 0.6)'
                        }]
                    },
                    options: {
                        legend: {
                            display: false // Désactive la légende du graphique (nombre d anime et nombre de vue par genre)
                        },
                        scales: {
                            xAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Nombre de personnes regardant'
                                },
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Nombre d\'animes'
                                },
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        },
                        plugins: {
                            datalabels: {
                                align: 'end',
                                anchor: 'end',
                                formatter: function(value, context) {
                                    return value.label;
                                },
                                font: {
                                    weight: 'bold'
                                },
                                color: '#000'
                            }
                        }
                    }
                });
            } else {
                console.error("L'élément canvas avec l'ID 'genre' est introuvable.");
            }
        });
    </script>
{% endblock %}
