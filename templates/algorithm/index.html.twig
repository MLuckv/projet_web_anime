{% extends 'base.html.twig' %}

{% block title %}Recomendation{% endblock %}

{% block body %}
    <div class="title-gender-selec-container">
        <a>Choisissez vos genres préférés (4 maximum) :</a>
    </div>

    <div class="gender-selec-container">
        <div class="gender-algo-wrapper">
            {% for genre in genres %}
                <button class="gender-algo-container" data-bs-toggle="modal" data-bs-target="#reg-modal" data-genre="{{ genre }}"><a>{{ genre }}</a></button>
            {% endfor %}
        </div>
        <div class="modal fade" id="reg-modal" tabindex="-1" aria-labelledby="modal-title" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modal-title">Choisissez 3 animes :</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body">

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="send-button-container">
        <button id="send-button">Envoyer</button>
    </div>

    <div class="title-image-algo-container">
        <a>Voici nos 4 recommandations :</a>
    </div>
    <div class="image-algo-container">
        <a>1.</a>  <div class="text-anime-algo"> Kaguya-sama wa Kokurasetai: Tensai-tachi no Renai Zunousen </div>{#<img class="image-anime-algo" src="{{ asset('/assets/img/detail_anime_img/vertical-placeholder.jpg') }}" width="175" height="225" alt="">#}
        <a>2.</a><img class="image-anime-algo" src="{{ asset('/assets/img/detail_anime_img/vertical-placeholder.jpg') }}"  alt="">
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const selectedGenres = [];
            const maxGenres = 4;

            document.querySelectorAll('.gender-algo-container').forEach(item => {
                item.addEventListener('click', () => {
                    const genre = item.getAttribute('data-genre');

                    if (item.classList.contains('selected')) {
                        item.classList.remove('selected');
                        const index = selectedGenres.indexOf(genre);
                        if (index > -1) selectedGenres.splice(index, 1);
                    } else {
                        if (selectedGenres.length < maxGenres) {
                            item.classList.add('selected');
                            selectedGenres.push(genre);
                        } else {
                            alert("Vous pouvez sélectionner jusqu'à 4 genres uniquement.");
                        }
                    }

                    console.log("Genres sélectionnés:", selectedGenres);
                });
            });

            document.getElementById('send-button').addEventListener('click', () => {
                if (selectedGenres.length === 0) {
                    alert("Veuillez sélectionner au moins un genre.");
                    return;
                }

                fetch("{{ path('algorithm_recommend') }}", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ genres: selectedGenres })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Erreur HTTP ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log("Réponse du serveur :", data);
                        if (data.success) {
                            alert("Genres envoyés avec succès : " + JSON.stringify(data.selectedGenres));
                        } else {
                            alert("Erreur dans la réponse : " + data.error);
                        }
                    })
                    .catch(error => {
                        console.error("Erreur lors de l'envoi :", error);
                        alert("Erreur lors de l'envoi des données : " + error.message);
                    });
            });
        });

    </script>
{% endblock %}
