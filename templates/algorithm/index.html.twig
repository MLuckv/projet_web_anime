{% extends 'base.html.twig' %}

{% block title %}Recomendation{% endblock %}

{% block body %}
    <div class="title-gender-selec-container">
        <a>Choisissez vos genres préférés (4 maximum) :</a>
    </div>

    <div class="gender-selec-container">
        <div class="gender-algo-wrapper">
            {% for genre, animes in genres %}
                <button class="gender-algo-container" data-bs-toggle="modal" data-bs-target="#reg-modal" data-genre="{{ genre }}" data-animes="{{ animes|json_encode }}">
                    <a>{{ genre }}</a>
                </button>
            {% endfor %}

        </div>
        <div class="send-button-container">
            <button id="send-button">Envoyer</button>
        </div>

        <div class="modal fade" id="reg-modal" tabindex="-1" aria-labelledby="modal-title" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modal-title">Choisissez 3 animes :</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body" id="anime-selection-container">
                        <!-- Les animes seront injectés ici dynamiquement -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="title-image-algo-container">
        <a>Voici nos 4 recommandations :</a>
    </div>
    <div class="image-algo-container" id="recommendations-container">
        <!-- Les recommandations d'animes seront affichées ici -->
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const selectedGenres = [];
            const selectedAnimes = [];  // Tableau qui contiendra uniquement les noms des animes
            const maxGenres = 4;

            // Gérer la sélection des genres
            document.querySelectorAll('.gender-algo-container').forEach(item => {
                item.addEventListener('click', () => {
                    const genre = item.getAttribute('data-genre');
                    const animes = JSON.parse(item.getAttribute('data-animes'));

                    if (item.classList.contains('selected')) {
                        item.classList.remove('selected');
                        const index = selectedGenres.indexOf(genre);
                        if (index > -1) selectedGenres.splice(index, 1);
                    } else {
                        if (selectedGenres.length < maxGenres) {
                            item.classList.add('selected');
                            selectedGenres.push(genre);
                            loadAnimesInModal(animes);  // Charger les animes de ce genre dans la modal
                        } else {
                            alert("Vous pouvez sélectionner jusqu'à 4 genres uniquement.");
                        }
                    }

                    console.log("Genres sélectionnés:", selectedGenres);
                });
            });

            // Charger les animes dans la modal
            function loadAnimesInModal(animes) {
                const container = document.getElementById('anime-selection-container');
                container.innerHTML = '';  // Réinitialiser le contenu

                animes.forEach(anime => {
                    const animeDiv = document.createElement('div');
                    animeDiv.classList.add('anime-option');
                    animeDiv.innerHTML = `
                        <div class="anime-item" data-anime-name="${anime.Nom}">
                            <img src="${anime.ImageUrl}" alt="${anime.Nom}" width="100" class="anime-image" />
                            <label for="anime-${anime.Nom}">${anime.Nom}</label>
                        </div>
                    `;
                    container.appendChild(animeDiv);
                });

                // Ajouter l'événement click pour ajouter les animes au tableau selectedAnimes
                document.querySelectorAll('.anime-item').forEach(item => {
                    item.addEventListener('click', () => {
                        const animeName = item.getAttribute('data-anime-name');

                        // Si l'anime n'est pas déjà sélectionné
                        if (!selectedAnimes.includes(animeName)) {
                            selectedAnimes.push(animeName);
                            item.style.border = '2px solid green';  // Indicateur visuel pour l'ajout

                            console.log("Animes sélectionnés:", selectedAnimes);
                        } else {
                            alert("Cet anime est déjà sélectionné !");
                        }
                    });
                });
            }

            // Gérer l'envoi des données
            document.getElementById('send-button').addEventListener('click', () => {
                if (selectedGenres.length === 0) {
                    alert("Veuillez sélectionner au moins un genre.");
                    return;
                }

                if (selectedAnimes.length === 0) {
                    alert("Veuillez sélectionner au moins un anime.");
                    return;
                }

                // Envoi uniquement des noms des animes sélectionnés
                fetch("{{ path('algorithm_recommend') }}", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        genres: selectedGenres,
                        animes: selectedAnimes  // N'envoyer que les noms des animes
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            console.log("Réponse du serveur :", data);
                            displayRecommendations(data.selectedAnimes);
                        } else {
                            alert("Erreur dans la réponse : " + data.error);
                        }
                    })
                    .catch(error => {
                        console.error("Erreur lors de l'envoi :", error);
                        alert("Erreur lors de l'envoi des données : " + error.message);
                    });
            });

            // Afficher les recommandations d'animes
            function displayRecommendations(animes) {
                const container = document.getElementById('recommendations-container');
                container.innerHTML = '';  // Réinitialiser le contenu

                animes.forEach(anime => {
                    const animeElement = document.createElement('div');
                    animeElement.innerHTML = `
                        <p>${anime}</p>
                    `;
                    container.appendChild(animeElement);
                });
            }
        });
    </script>
{% endblock %}
